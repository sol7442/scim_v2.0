plugins {
    id 'java'
    id "org.sonarqube" version "3.0"
}

repositories {
    jcenter()
}

dependencies {

}
allprojects{
	apply plugin: 'java'
	apply plugin: 'eclipse'
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	
	
	repositories {
	    jcenter()
	}
	dependencies {
		implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
		
		compileOnly 			group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
		annotationProcessor 	group: 'org.projectlombok', name: 'lombok', version: '1.18.20'

	 	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
		implementation group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'
		implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

		//testCompileOnly 		group: 'org.projectlombok', name: 'lombok', version: '1.18.20'	
	 	//testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.20'
	    //testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.2'
	}
	
	tasks.register('make-project-'+project.name){
		group = "ide";
		doLast {
			println "project-dir : " + project.projectDir
			project.projectDir
			
			def dir_list = [];
			dir_list << project.projectDir;
			dir_list << new File(project.projectDir,"src");
			dir_list << new File(project.projectDir,"src/main");
			dir_list << new File(project.projectDir,"src/main/java");
			dir_list << new File(project.projectDir,"src/main/resources");
			dir_list << new File(project.projectDir,"src/test");
			dir_list << new File(project.projectDir,"src/test/java");
			dir_list << new File(project.projectDir,"src/test/resources");
			
			dir_list.each{ file->
				if(!file.exists()){
					file.mkdir();
				}
			}
			new File(project.projectDir,"build.gradle").text="//" +  project.name;
		}
	}
}

sonarqube {
    properties {
        property "sonar.host.url", "http://10.0.4.125:49000"
        property "sonar.login", "173f6a7e12521280e7f9deb69bcbdd020b208276" 
        property "sonar.projectKey", "scim"
        property "sonar.projectName", "scim"
                
        property "sonar.language", "java" 	
        property "sonar.sourceEncoding", "UTF-8"
    }
}